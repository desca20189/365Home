@model _365Home.Models.ViewModels.HomeViewModel
<main role="main">
    <section class="text-center">
        <div class="container-fluid">
            @*<h1>Album example</h1>
                <p class="lead text-muted">Something short and leading about the collection below—its contents, the creator, etc. Make it short and sweet, but not too short so folks don’t simply skip over it entirely.</p>*@
            <p>
                @*<a href="#" class="btn btn-primary my-2">Main call to action</a>
                    <a href="#" class="btn btn-secondary my-2">Secondary action</a>*@
            </p>
            <div class="row">
                <div class="col-9">
                    <form class="form-inline my-2 my-lg-0">
                        <input class="form-control mr-sm-2 w-75" type="text" name="SearchString" value="@ViewData["currentFilter"]" placeholder="Search by Name or Address">
                        <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
                    </form>
                </div>
                <div class="col-3">
                    <a class="btn btn-group btn-info" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Sort By Name</a>
                    <a class="btn btn-group btn-info" asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Sort By Price</a>
                </div>


            </div>

        </div>
    </section>
    @if (Model.paginatedLocationList.Count() > 0)
    {
        <div class="album py-5 bg-light mt-3">
            <div class="container">
                <div class="row">
                    @foreach (var location in Model.paginatedLocationList)
                    {
                        <div class="col-md-4">
                            <div class="card mb-4 shadow-sm">
                                @if (location.ImageList.Count > 0)
                                {

                                    var base64 = Convert.ToBase64String(location.ImageList.FirstOrDefault().Picture);
                                    var imgSrc = string.Format("data:image/jpg;base64,{0}", base64);
                                    <img src="@imgSrc" height="200em" width="100%" />


                                }
                                @*<svg class="bd-placeholder-img card-img-top" width="100%" height="225" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice" focusable="false" role="img" aria-label="Placeholder: Thumbnail"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c" /><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>*@
                            <div class="card-body">
                                <h5 class="font-weight-bold">@location.Name</h5>
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted text-primary font-weight-light">@location.Ward.Name</small>
                                    <small class="text-muted text-primary font-weight-light">@location.District.Name</small>
                                    <small class="text-muted text-primary font-weight-light">@location.Province.Name</small>
                                </div>
                                @{
                                    string[] unwatedCharacters = { "<p>", "</p>", "<strong>", "</strong>", "<div>", "</div>" };
                                    var shortDescription = location.Description;
                                    foreach (string unwantedChar in unwatedCharacters)
                                    {
                                        shortDescription = shortDescription.Replace(unwantedChar, "");
                                    }

                                    if (shortDescription.Length > 200)
                                    {
                                        shortDescription = shortDescription.Substring(0, 200) + "...";
                                    }
                                }
                                @*<p class="card-text overflow-hidden">@shortDescription</p>*@
                             

                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="btn-group">
                                        <a asp-action="LocationDetails" type="button" class="btn btn-sm btn-outline-secondary" asp-route-id="@location.Id">View</a>
                                    </div>
                                    <small class="text text-primary font-weight-bold">@string.Format("{0:#,0}", @location.Price)<span>&#8363;</span></small>
                                    <small class="text-muted text-primary font-weight-light">@string.Format("{0:#,0}", @location.Area) m<sup>2</sup></small>
                                </div>
                            </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-12">
                        @{
                            var prevDisabled = !Model.paginatedLocationList.HasPreviousPage ? "disabled" : "";
                            var nextDisabled = !Model.paginatedLocationList.HasNextPage ? "disabled" : "";
                        }

                        <a asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(Model.paginatedLocationList.PageIndex - 1)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           class="btn btn-primary @prevDisabled">
                            Previous
                        </a>
                        <a asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@(Model.paginatedLocationList.PageIndex + 1)"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]"
                           class="btn btn-primary @nextDisabled">
                            Next
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }

</main>


@*@foreach (var category in Model.CategoryList.OrderBy(o => o.DisplayOrder))
    {
        @if (Model.ServiceList.Where(c => c.CategoryId == category.Id).Count() > 0)
        {
            <div class="row container pb-3 backgroundWhite">
                <div class="col-12">
                    <div class="row">
                        <h2 class="text-success"><b>@category.Name</b></h2>

                        <div class="col-12">
                            <div class="row my-3">
                                @foreach (var service in Model.ServiceList.Where(c => c.CategoryId == category.Id))
                                {
                                    <div class="col-lg-4 col-xl-3 col-md-6 pb-4">
                                        <div class="card" style="border:2px solid #43ac6a; border-radius:5px; ">
                                            <div class="pl-3 pt-1 text-center">
                                                <h3 class="card-title text-primary"><b>@service.Name</b></h3>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <div class="pl-1 text-muted">Price per service</div>
                                                <div class="pr-2 text-danger h5">$@service.Price</div>
                                            </div>
                                            <img src="@service.ImageUrl" class="card-img-top p-2 rounded" />
                                            <div class="text-muted text-center pb-2">@service.Frequency.Name</div>
                                            <a asp-action="Details" class="btn btn-success" style="border-radius:2px;" asp-route-id="@service.Id">Details</a>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="row my-3">
                                @foreach (var service in Model.ServiceList.Where(c => c.CategoryId == category.Id))
                                {
                                    <div class="col-lg-4 col-xl-3 col-md-6 pb-4">
                                        <div class="card" style="border:2px solid #43ac6a; border-radius:5px; ">
                                            <div class="pl-3 pt-1 text-center">
                                                <h3 class="card-title text-primary"><b>@service.Name</b></h3>
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <div class="pl-1 text-muted">Price per service</div>
                                                <div class="pr-2 text-danger h5">$@service.Price</div>
                                            </div>
                                            <img src="@service.ImageUrl" class="card-img-top p-2 rounded" />
                                            <div class="text-muted text-center pb-2">@service.Frequency.Name</div>
                                            <a asp-action="Details" class="btn btn-success" style="border-radius:2px;" asp-route-id="@service.Id">Details</a>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }*@
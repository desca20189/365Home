@model _365Home.Models.ViewModels.LocationViewModel
@using _365Home.Ultility
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    var title = "Edit Property";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form method="post" asp-action="Upsert" enctype="multipart/form-data">
    <div class="row px-2 mx-2 backgroundWhite border">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @if (Model.Location.Id != null)
        {
            <input type="hidden" asp-for="Location.Id" />
            title = "Edit Location";
        }

        <div class="col-8">
            <h2 class="text-primary">@title</h2>
            <br />
        </div>
        @if (SignInManager.IsSignedIn(User))
        {
            @if (User.IsInRole(SD.Admin))
            {
                <div class="col-4">
                    @if (@Model.Location.LocationStatus != SD.LocationStatusLocked)
                    {
                        <a onclick=LockLocation('/admin/location/LockLocation/@Model.Location.Id') class="btn btn-danger text-white" style='cursor:pointer;'>
                            <i class="fas fa-lock"></i> Lock This Location
                        </a>
                    }
                    else
                    {
                        <a onclick=UnLockLocation('/admin/location/UnLockLocation/@Model.Location.Id') class="btn btn-success text-white" style='cursor:pointer;'>
                            <i class="fas fa-lock-open"></i> Unlock This Location
                        </a>
                    }
                </div>
            }
        }
    <div class="col-12">
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Location.Name"></label>
            </div>
            <div class="col-8">
                <input asp-for="Location.Name" class="form-control" />
                <span asp-validation-for="Location.Name" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Location.Area"></label><label>&nbsp;(m<sup>2</sup>)</label>
            </div>
            <div class="col-8">
                <input asp-for="Location.Area" class="form-control" />
                <span asp-validation-for="Location.Area" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Location.Price"></label><label>&nbsp;(Per Month)</label>
            </div>
            <div class="col-8">
                <input asp-for="Location.Price" class="form-control" />
                <span asp-validation-for="Location.Price" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Location.Description"></label>
            </div>
            <div class="col-8">
                <textarea asp-for="Location.Description" class="form-control" style="height:300px;"></textarea>
                <span asp-validation-for="Location.Description" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Location.Address"></label>
            </div>
            <div class="col-8">
                <input asp-for="Location.Address" class="form-control" />
                <span asp-validation-for="Location.Address" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Location.LocationTypeId"></label>
            </div>
            <div class="col-8">
                @Html.DropDownListFor(m => m.Location.LocationTypeId, Model.LocationTypeList,
               "-Please select a location type-", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Location.ProvinceId"></label>
            </div>
            <div class="col-8">
                @Html.DropDownListFor(m => m.Location.ProvinceId, Model.ProvinceList,
               "-Please select a province-", new { @class = "form-control", @id = "ProvinceDropdown" })
                @Html.ValidationMessageFor(m => m.Location.ProvinceId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Location.DistrictId"></label>
            </div>
            <div class="col-8">
                @Html.DropDownListFor(m => m.Location.DistrictId, Model.DistrictList,
               "-Please select a district-", new { @class = "form-control", @id = "DistrictDropdown" })
                @Html.ValidationMessageFor(m => m.Location.DistrictId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Location.WardId"></label>
            </div>
            <div class="col-8">
                @Html.DropDownListFor(m => m.Location.WardId, Model.WardList,
               "-Please select a ward-", new { @class = "form-control", @id = "WardDropdown" })
                @Html.ValidationMessageFor(m => m.Location.WardId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Location.ImageList"></label>
            </div>
            <div class="col-8">
                <input type="file" id="imageList" name="files" multiple class="form-control" />
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Location.IsPublic"></label>
            </div>
            <div class="col-8">
                <div class="form-check-inline">
                    <input type="radio" asp-for="Location.IsPublic" value="true" class="form-check-input">
                    <label class="form-check-label" for="IsPublic">Yes</label>
                </div>
                <div class="form-check-inline">
                    <input type="radio" asp-for="Location.IsPublic" value="false" class="form-check-input">
                    <label class="form-check-label" for="IsPublic">No</label>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-4">
                <label asp-for="Location.LocationStatus"></label>
            </div>
            <div class="col-8">
                @Html.DropDownListFor(m => m.Location.LocationStatus, Model.LocationStatusList,
                new { @class = "form-control", @id = "StatusDropdown" })
                @Html.ValidationMessageFor(m => m.Location.LocationStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Location.ImageList != null && Model.Location.ImageList.Count > 0)
        {
            <table class="table table-striped table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Image</th>
                        <th>Caption</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (WebImages image in Model.Location.ImageList)
                    {
                        var base64 = Convert.ToBase64String(image.Picture);
                        var imgSrc = string.Format("data:image/jpg;base64,{0}", base64);

                        <tr>
                            <td><div class="popup-gallery"><a href="@imgSrc"><img src="@imgSrc" height="230em" width="250em" /></a></div></td>
                            <td>@image.Name</td>
                            <td>
                                <a class='btn btn-danger text-white' style='cursor:pointer; width:100px;' onclick=Delete('/admin/location/RemoveLoctionPicture/@image.Id')>
                                    <i class='far fa-trash-alt'></i> Delete
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        }

        <div class="form-group row">
            <div class="col-8 offset-4">
                @if (Model.Location.Id != null)
                {
                    //Edit button and back to list
                    <partial name="_EditAndBackToListButton" model="Model.Location.Id" />
                }
                else
                {
                    <div class="row">
                        <div class="col">
                            <button type="submit" @*onclick="return validateInput()" *@ class="btn btn-primary form-control">Create</button>
                        </div>
                        <div class="col">
                            <a asp-action="Index" class="btn btn-success form-control">Back To List</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    </div>
</form>

@section Scripts{
    <script src="https://cdn.tiny.cloud/1/vz6osrpl7ucp2e5niep79mzdkukpuwouvh3v0to3yayj4fhe/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: 'lists',
            menubar: 'file edit format'
        })

        var baseService = "/admin/location";
        var districtUrl = baseService + "/GetAllDistrictByProvinceId";
        var wardUrl = baseService + "/GetAllWardByDistrictId";

        function validateInput() {
            if (document.getElementById("uploadBox").value == "") {
                swal("Error", "Please select an image", "error")
                return false;
            }
            return true;
        };

        function _getDistrict(id) {
            $.getJSON(districtUrl + "/" + id, function (data) {
                if (data != null && data != undefined && data.length) {
                    var html = '';
                    $.each(data, function (key, item) {
                        html += '<option value=' + item.id + '>' + item.name + '</option>';
                    });
                    $("#DistrictDropdown").html(html);
                }
            });
        }

        function _getWard(id) {
            $.getJSON(wardUrl + "/" + id, function (data) {
                if (data != null && data != undefined && data.length) {
                    var html = '';
                    $.each(data, function (key, item) {
                        html += '<option value=' + item.id + '>' + item.name + '</option>';
                    });
                    $("#WardDropdown").html(html);
                }
            });
        }
        $(document).ready(function () {
            $("#ProvinceDropdown").on('change', function () {
                var id = $(this).val();
                var wardSelect = $('#WardDropdown');
                var districtSelect = $('#DistrictDropdown');
                wardSelect.empty();
                if (id != undefined && id != '') {
                    _getDistrict(id);
                } else if (id == undefined || id == '') {
                    wardSelect.empty();
                    districtSelect.empty();
                }
            });
            $("#DistrictDropdown").on('change', function () {
                var id = $(this).val();
                if (id != undefined && id != '') {
                    _getWard(id);
                }
            });

        });


        function Delete(url) {
            swal({
                title: "Are you sure want to Delete?",
                text: "You will not be able to restore the file!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: true
            }, function () {
                $.ajax({
                    type: 'DELETE',
                    url: url,
                    success: function (data) {
                        if (data.success) {
                            toastr.success(data.message);
                            window.location.reload();
                        }
                        else {
                            toastr.error(data.message);
                        }
                    }
                });
            });


        }

        function LockLocation(url) {
            swal({
                title: "Lock this property?",
                text: "This property status will be change to locked.",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Lock",
                closeOnConfirm: true
            }, function () {
                $.ajax({
                    type: 'POST',
                    url: url,
                    success: function (data) {
                        if (data.success) {
                            toastr.error(data.message);
                            window.location.reload();
                        }
                        else {
                            toastr.error(data.message);
                        }
                    }
                });
            });
        }

        function UnLockLocation(url) {
            swal({
                title: "Unlock this property?",
                text: "This property status will be change to vacant.",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#32a836",
                confirmButtonText: "Unlock",
                closeOnConfirm: true
            }, function () {
                $.ajax({
                    type: 'POST',
                    url: url,
                    success: function (data) {
                        if (data.success) {
                            toastr.success(data.message);
                            window.location.reload();
                        }
                        else {
                            toastr.error(data.message);
                        }
                    }
                });
            });
        }
    </script>
}

